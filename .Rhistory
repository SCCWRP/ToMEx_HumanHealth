exposure.route == "food" ~ "Food",
exposure.route == "gavage" ~ "Gavage",
exposure.route == "gestation" ~ "Gestation",
exposure.route == "gestation,lactation" ~ "Gestation & Lactation",
exposure.route == "inhalation" ~ "Inhalation",
exposure.route == "intratracheal.instillation" ~ "Intratracheal Instillation",
exposure.route == "iv.injection" ~ "IV Injection",
exposure.route ==  "Not Applicable"~"Not Applicable")))
testplot <- ggplot(human_setup, aes(x = dose.mg.mL.nominal, y = shape_h_f)) +
geom_boxplot(alpha = 0.7, aes(color = effect_h_f, fill = effect_h_f)) +
scale_x_log10(breaks = c(0.00000001, 0.000001, 0.0001, 0.01, 1, 100),
labels = c(0.00000001, 0.000001, 0.0001, 0.01, 1, 100)) +
scale_color_manual(values = c("#A1CAF6", "#4C6FA1")) +
scale_fill_manual(values = c("#A1CAF6", "#4C6FA1")) +
theme_classic() +
theme(text = element_text(size=18),
legend.position = "right") +
labs(x = "Concentration (mg/mL)",
y = "Size",
color = "Effect?",
fill = "Effect?")
testplot
library(tidyverse) #General everything
library(RColorBrewer) #plot colors
library(ggplot2) #General plotting
library(ggrepel) #For adding text labels that repel away from data points
library(calecopal) #Color palette
library(shiny) #Runs shiny
library(shinythemes) #Shiny theme for the page
library(shinyWidgets) #Widgets
library(scales) #SSD - Use the percent format
library(reshape2) #Overview tab - melts bars together
library(ssdtools) #SSD package
library(DT) #Build HTML data tables
library(plotly) #Make plots interactive
library(viridis) #Colors
library(scales) #To use "percent" function
library(shinyjs) #Exploration tab - reset button
human <- read_csv("Humans_Clean_Final.csv", guess_max = 10000)
human_v1 <- human %>% # start with original dataset
# full dataset filters.
mutate(effect_h_f = factor(case_when(effect == "Y" ~ "Yes",
effect == "N" ~ "No"),
levels = c("No", "Yes"))) %>%
# removing NAs to make data set nicer
replace_na(list(size.category = 0, shape = "Not Reported", polymer = "Not Reported", exposure.route = "Not Applicable"))
human_setup <- human_v1 %>% # start with original dataset
mutate(size_h_f = factor(case_when(
size.category == 1 ~ "1nm < 100nm",
size.category == 2 ~ "100nm < 1µm",
size.category == 3 ~ "1µm < 100µm",
size.category == 4 ~ "100µm < 1mm",
size.category == 0 ~ "Not Reported"),
levels = c("1nm < 100nm", "100nm < 1µm", "1µm < 100µm", "100µm < 1mm", "Not Reported"))) %>% # creates new column with nicer names and order by size levels.
# shape category data tidying.
mutate(shape_h_f = factor(case_when(
shape == "fragment" ~ "Fragment",
shape == "sphere" ~ "Sphere",
shape == NA ~ "Not Reported"),
levels = c("Fragment", "Sphere", "Not Reported"))) %>% # order our different shapes.
# polymer category data tidying.
mutate(poly_h_f = factor(case_when(
polymer == "PA" ~ "Polyamide",
polymer == "PE" ~ "Polyethylene",
polymer == "PMMA" ~ "Polymethylmethacrylate",
polymer == "PP" ~ "Polypropylene",
polymer == "PS" ~ "Polystyrene",
polymer == "PUR" ~ "Polyurathane",
polymer == "PVC" ~ "Polyvinylchloride",
polymer == "TR" ~ "Tire Rubber"))) %>%
# taxonomic category data tidying.
mutate(lvl1_h_f = factor(case_when(lvl1 == "alimentary.excretory" ~ "Alimentary, Excretory",
lvl1 == "behavioral.sense.neuro" ~ "Behavioral, Sensory, Neurological",
lvl1 == "cell.growth.proliferation" ~ "Cell Growth and Proliferation",
lvl1 == "cell.morphology.structure" ~ "Cell Morphology and Structure",
lvl1 == "circulatory" ~ "Circulatory",
lvl1 == "fitness" ~ "Fitness",
lvl1 == "immune" ~ "Immune",
lvl1 == "metabolism" ~ "Metabolism",
lvl1 == "microbiome" ~ "Microbiome",
lvl1 == "respiratory" ~ "Respiratory",
lvl1 == "stress" ~ "Stress"))) %>% # creates new column with nicer names.
# Level 2 Data tidying
mutate(lvl2_h_f = factor(case_when(lvl2 == "actinobacteria" ~ "Actinobacteria",
lvl2 == "amino.acid.metabolism" ~ "Amino Acid Metabolism",
lvl2 == "apoptosis.cell.cycle"~"Apoptosis and Cell Cycle",
lvl2 == "bacteriodetes"~ "Bacteriodetes",
lvl2 == "bile.acid" ~ "Bile Acid",
lvl2 == "body.condition"~"Body Condition",
lvl2 == "carb.metabolism"~"Carb Metabolism",
lvl2 == "cell.aggregation"~"Cell Aggregation",
lvl2 == "cell.membrane"~"Cell Membrane",
lvl2 == "circulatory"~"Circulatory",
lvl2 == "complement"~"Complement",
lvl2 == "coordination"~"Coordination",
lvl2 == "cytotoxicity"~"Cytotoxicity",
lvl2 == "development" ~ "Development",
lvl2 == "digestive.tract.histo"~"Digestive Tract Histological Abnormalities",
lvl2 == "diversity"~ "Diversity",
lvl2 == "dna.damage" ~ "DNA Damage",
lvl2 == "energy.metabolism" ~ "Energy Metabolism",
lvl2 == "exploration" ~ "Exploration",
lvl2 == "firmicutes"~ "Firmicutes",
lvl2 == "gen.stress" ~ "General Stress",
lvl2 == "hemolysis" ~ "Hemolysis",
lvl2 == "immune.cells"~"Immune Cells",
lvl2 == "immune.other"~"Immune Other ",
lvl2 == "inflammation" ~ "Inflammation",
lvl2 == "intestinal.inflammation" ~ "Intestinal Inflammation",
lvl2 == "intestinal.ion.transport" ~ "Intestinal Ion Transport",
lvl2 == "intestinal.muscus.secretion" ~ "Intestinal Mucus Secretion",
lvl2 == "intestinal.permeability" ~ "Intestinal Permeability",
lvl2 == "intestinal.tight.junctions" ~ "Intestinal Tight Junctions",
lvl2 == "kidney.histo"~"Kidney Histological abnormalities",
lvl2 == "lipid.metabolism"~"Lipid Metabolism",
lvl2 == "liver.histo"~"Liver Histological Abnormalities",
lvl2 == "locomotion"~"Locomotion",
lvl2 == "lungs.histo" ~ "Lung Histological Abnormalities",
lvl2 == "lysosome" ~ "Lyosome",
lvl2 == "melainabacteria" ~ "melainabacteria",
lvl2 == "morphology.gen" ~ "General Morphology",
lvl2 == "mortality"~"Mortality",
lvl2 == "nervous.system"~"Nervous System",
lvl2 == "oxidative.stress"~"Oxidative Stress",
lvl2 == "patescibacteria" ~ "Patescibacteria",
lvl2 == "permeability" ~ "Permeability",
lvl2 == "proliferation" ~ "Proliferation",
lvl2 == "proteobacteria"~"Protebacteria",
lvl2 == "respiration"~"Respiration",
lvl2 == "spleen.histo" ~ "Spleen Histological Abnormalities",
lvl2 == "tenericutes" ~ "Tenericutes",
lvl2 == "thyroid" ~ "Thyroid",
lvl2 == "verrucomicrobiae" ~ "Verrucomicrobiae",
lvl2 == "vision" ~ "Vision"))) %>% #Renames for widget
mutate(bio_h_f = factor(case_when(bio.org == "cell"~"Cell", #Bio Org Data Tidying
bio.org == "organism"~"Organism",
bio.org == "subcell"~"Subcell",
bio.org == "tissue" ~ "Tissue")))%>%
mutate(vivo_h_f = factor(case_when(invitro.invivo == "invivo"~"In Vivo",
invitro.invivo == "invitro"~"In Vitro")))%>% ##Renames for widget
mutate(life_h_f = factor(case_when(life.stage == "early,f1"~"Early, F1 Generation",
life.stage == "early,f2"~"Early, F2 Generation",
life.stage == "juvenile"~"Juvenile",
life.stage == "adult"~"Adult",
life.stage == "Not Reported"~"Not Reported")))%>% #Renames for widget
mutate(exposure_route_h_f = factor(case_when(exposure.route == "dermal" ~ "Dermal",
exposure.route == "food" ~ "Food",
exposure.route == "gavage" ~ "Gavage",
exposure.route == "gestation" ~ "Gestation",
exposure.route == "gestation,lactation" ~ "Gestation & Lactation",
exposure.route == "inhalation" ~ "Inhalation",
exposure.route == "intratracheal.instillation" ~ "Intratracheal Instillation",
exposure.route == "iv.injection" ~ "IV Injection",
exposure.route ==  "Not Applicable"~"Not Applicable")))
testplot <- ggplot(human_setup, aes(x = dose.mg.mL.nominal, y = shape_h_f)) +
geom_boxplot(alpha = 0.7, aes(color = effect_h_f, fill = effect_h_f)) +
scale_x_log10(breaks = c(0.00000001, 0.000001, 0.0001, 0.01, 1, 100),
labels = c(0.00000001, 0.000001, 0.0001, 0.01, 1, 100)) +
scale_color_manual(values = c("#A1CAF6", "#4C6FA1")) +
scale_fill_manual(values = c("#A1CAF6", "#4C6FA1")) +
theme_classic() +
theme(text = element_text(size=18),
legend.position = "right") +
labs(x = "Concentration (mg/mL)",
y = "Size",
color = "Effect?",
fill = "Effect?")
testplot
View(human_v1)
library(tidyverse) #General everything
library(RColorBrewer) #plot colors
library(ggplot2) #General plotting
library(ggrepel) #For adding text labels that repel away from data points
library(calecopal) #Color palette
library(shiny) #Runs shiny
library(shinythemes) #Shiny theme for the page
library(shinyWidgets) #Widgets
library(scales) #SSD - Use the percent format
library(reshape2) #Overview tab - melts bars together
library(ssdtools) #SSD package
library(DT) #Build HTML data tables
library(plotly) #Make plots interactive
library(viridis) #Colors
library(scales) #To use "percent" function
library(shinyjs) #Exploration tab - reset button
human <- read_csv("Humans_Clean_Final.csv", guess_max = 10000)
human_v1 <- human %>% # start with original dataset
# full dataset filters.
mutate(effect_h_f = factor(case_when(effect == "Y" ~ "Yes",
effect == "N" ~ "No"),
levels = c("No", "Yes"))) %>%
# removing NAs to make data set nicer
replace_na(list(size.category = 0, shape = "Not Reported", polymer = "Not Reported", exposure.route = "Not Applicable"))
human_setup <- human_v1 %>% # start with original dataset
mutate(size_h_f = factor(case_when(
size.category == 1 ~ "1nm < 100nm",
size.category == 2 ~ "100nm < 1µm",
size.category == 3 ~ "1µm < 100µm",
size.category == 4 ~ "100µm < 1mm",
size.category == 0 ~ "Not Reported"),
levels = c("1nm < 100nm", "100nm < 1µm", "1µm < 100µm", "100µm < 1mm", "Not Reported"))) %>% # creates new column with nicer names and order by size levels.
# shape category data tidying.
mutate(shape_h_f = factor(case_when(
shape == "fragment" ~ "Fragment",
shape == "sphere" ~ "Sphere"),
# shape == NA ~ "Not Reported"),
levels = c("Fragment", "Sphere", "Not Reported"))) %>% # order our different shapes.
# polymer category data tidying.
mutate(poly_h_f = factor(case_when(
polymer == "PA" ~ "Polyamide",
polymer == "PE" ~ "Polyethylene",
polymer == "PMMA" ~ "Polymethylmethacrylate",
polymer == "PP" ~ "Polypropylene",
polymer == "PS" ~ "Polystyrene",
polymer == "PUR" ~ "Polyurathane",
polymer == "PVC" ~ "Polyvinylchloride",
polymer == "TR" ~ "Tire Rubber"))) %>%
# taxonomic category data tidying.
mutate(lvl1_h_f = factor(case_when(lvl1 == "alimentary.excretory" ~ "Alimentary, Excretory",
lvl1 == "behavioral.sense.neuro" ~ "Behavioral, Sensory, Neurological",
lvl1 == "cell.growth.proliferation" ~ "Cell Growth and Proliferation",
lvl1 == "cell.morphology.structure" ~ "Cell Morphology and Structure",
lvl1 == "circulatory" ~ "Circulatory",
lvl1 == "fitness" ~ "Fitness",
lvl1 == "immune" ~ "Immune",
lvl1 == "metabolism" ~ "Metabolism",
lvl1 == "microbiome" ~ "Microbiome",
lvl1 == "respiratory" ~ "Respiratory",
lvl1 == "stress" ~ "Stress"))) %>% # creates new column with nicer names.
# Level 2 Data tidying
mutate(lvl2_h_f = factor(case_when(lvl2 == "actinobacteria" ~ "Actinobacteria",
lvl2 == "amino.acid.metabolism" ~ "Amino Acid Metabolism",
lvl2 == "apoptosis.cell.cycle"~"Apoptosis and Cell Cycle",
lvl2 == "bacteriodetes"~ "Bacteriodetes",
lvl2 == "bile.acid" ~ "Bile Acid",
lvl2 == "body.condition"~"Body Condition",
lvl2 == "carb.metabolism"~"Carb Metabolism",
lvl2 == "cell.aggregation"~"Cell Aggregation",
lvl2 == "cell.membrane"~"Cell Membrane",
lvl2 == "circulatory"~"Circulatory",
lvl2 == "complement"~"Complement",
lvl2 == "coordination"~"Coordination",
lvl2 == "cytotoxicity"~"Cytotoxicity",
lvl2 == "development" ~ "Development",
lvl2 == "digestive.tract.histo"~"Digestive Tract Histological Abnormalities",
lvl2 == "diversity"~ "Diversity",
lvl2 == "dna.damage" ~ "DNA Damage",
lvl2 == "energy.metabolism" ~ "Energy Metabolism",
lvl2 == "exploration" ~ "Exploration",
lvl2 == "firmicutes"~ "Firmicutes",
lvl2 == "gen.stress" ~ "General Stress",
lvl2 == "hemolysis" ~ "Hemolysis",
lvl2 == "immune.cells"~"Immune Cells",
lvl2 == "immune.other"~"Immune Other ",
lvl2 == "inflammation" ~ "Inflammation",
lvl2 == "intestinal.inflammation" ~ "Intestinal Inflammation",
lvl2 == "intestinal.ion.transport" ~ "Intestinal Ion Transport",
lvl2 == "intestinal.muscus.secretion" ~ "Intestinal Mucus Secretion",
lvl2 == "intestinal.permeability" ~ "Intestinal Permeability",
lvl2 == "intestinal.tight.junctions" ~ "Intestinal Tight Junctions",
lvl2 == "kidney.histo"~"Kidney Histological abnormalities",
lvl2 == "lipid.metabolism"~"Lipid Metabolism",
lvl2 == "liver.histo"~"Liver Histological Abnormalities",
lvl2 == "locomotion"~"Locomotion",
lvl2 == "lungs.histo" ~ "Lung Histological Abnormalities",
lvl2 == "lysosome" ~ "Lyosome",
lvl2 == "melainabacteria" ~ "melainabacteria",
lvl2 == "morphology.gen" ~ "General Morphology",
lvl2 == "mortality"~"Mortality",
lvl2 == "nervous.system"~"Nervous System",
lvl2 == "oxidative.stress"~"Oxidative Stress",
lvl2 == "patescibacteria" ~ "Patescibacteria",
lvl2 == "permeability" ~ "Permeability",
lvl2 == "proliferation" ~ "Proliferation",
lvl2 == "proteobacteria"~"Protebacteria",
lvl2 == "respiration"~"Respiration",
lvl2 == "spleen.histo" ~ "Spleen Histological Abnormalities",
lvl2 == "tenericutes" ~ "Tenericutes",
lvl2 == "thyroid" ~ "Thyroid",
lvl2 == "verrucomicrobiae" ~ "Verrucomicrobiae",
lvl2 == "vision" ~ "Vision"))) %>% #Renames for widget
mutate(bio_h_f = factor(case_when(bio.org == "cell"~"Cell", #Bio Org Data Tidying
bio.org == "organism"~"Organism",
bio.org == "subcell"~"Subcell",
bio.org == "tissue" ~ "Tissue")))%>%
mutate(vivo_h_f = factor(case_when(invitro.invivo == "invivo"~"In Vivo",
invitro.invivo == "invitro"~"In Vitro")))%>% ##Renames for widget
mutate(life_h_f = factor(case_when(life.stage == "early,f1"~"Early, F1 Generation",
life.stage == "early,f2"~"Early, F2 Generation",
life.stage == "juvenile"~"Juvenile",
life.stage == "adult"~"Adult",
life.stage == "Not Reported"~"Not Reported")))%>% #Renames for widget
mutate(exposure_route_h_f = factor(case_when(exposure.route == "dermal" ~ "Dermal",
exposure.route == "food" ~ "Food",
exposure.route == "gavage" ~ "Gavage",
exposure.route == "gestation" ~ "Gestation",
exposure.route == "gestation,lactation" ~ "Gestation & Lactation",
exposure.route == "inhalation" ~ "Inhalation",
exposure.route == "intratracheal.instillation" ~ "Intratracheal Instillation",
exposure.route == "iv.injection" ~ "IV Injection",
exposure.route ==  "Not Applicable"~"Not Applicable")))
testplot <- ggplot(human_setup, aes(x = dose.mg.mL.nominal, y = vivo_h_f)) +
geom_boxplot(alpha = 0.7, aes(color = effect_h_f, fill = effect_h_f)) +
scale_x_log10(breaks = c(0.00000001, 0.000001, 0.0001, 0.01, 1, 100),
labels = c(0.00000001, 0.000001, 0.0001, 0.01, 1, 100)) +
scale_color_manual(values = c("#A1CAF6", "#4C6FA1")) +
scale_fill_manual(values = c("#A1CAF6", "#4C6FA1")) +
theme_classic() +
theme(text = element_text(size=18),
legend.position = "right") +
labs(x = "Concentration (mg/mL)",
y = "Size",
color = "Effect?",
fill = "Effect?")
testplot
runApp('app_humansonly.R')
runApp('app_humansonly.R')
runApp('app_humansonly.R')
runApp('app_humansonly.R')
library(shiny); runApp('app_humansonly.R')
runApp('app_humansonly.R')
runApp('app_humansonly.R')
runApp('app_humansonly.R')
runApp('app_humansonly.R')
write.csv(Final_effect_datasetH, "Final_effect_datasetH.csv")
Final_effect_datasetH<-Final_effect_dataset%>%
mutate(plot_f=factor(plot))
library(tidyverse) #General everything
library(RColorBrewer) #plot colors
library(ggplot2) #General plotting
library(ggrepel) #For adding text labels that repel away from data points
library(calecopal) #Color palette
library(shiny) #Runs shiny
library(shinythemes) #Shiny theme for the page
library(shinyWidgets) #Widgets
library(scales) #SSD - Use the percent format
library(reshape2) #Overview tab - melts bars together
library(ssdtools) #SSD package
library(DT) #Build HTML data tables
library(plotly) #Make plots interactive
library(viridis) #Colors
library(scales) #To use "percent" function
library(shinyjs) #Exploration tab - reset bu
library(tigerstats)#Exploration tab - reset bu
aoc <- read_csv("Humans_Clean_Final.csv", guess_max = 10000)
replace_na(list(size.category = 0, shape = "Not Reported", polymer = "Not Reported", exposure.route = "Not Applicable", life.stage = "Not Reported"))
polydf<-rowPerc(xtabs( ~polymer +effect, aoc)) #pulls polymers by effect
polyf<-as.data.frame(polydf)%>% #Makes data frame
filter(effect %in% c("Y","N"))%>% #Sorts into Yes and No
rename(Type = "polymer")%>%#rename so future columns have same name
mutate(Type = case_when(
Type == "PA" ~ "Polyamide",
Type == "PE" ~ "Polyethylene",
Type == "PMMA" ~ "Polymethylmethacrylate",
Type == "PP" ~ "Polypropylene",
Type == "PS" ~ "Polystyrene",
Type == "PUR" ~ "Polyurathane",
Type == "PVC" ~ "Polyvinylchloride",
Type == "TR" ~ "Tire Rubber"))%>%
mutate_if(is.numeric, round,0)%>% #rounds percents
mutate(plot="Polymer") # change column name for check list
Endpoints<-xtabs(~polymer +effect ,aoc) #Pulls all study obs. for polymer from dataset
polyfinal<- data.frame(cbind(polyf, Endpoints))%>% #adds it as a column
rename(Endpoints='Freq.1')%>% #renames column
rename(category='polymer')#renames column
polyfinal
polydf
sizedf<-rowPerc(xtabs(~size.category +effect, aoc))
sizef<-as.data.frame(sizedf)%>%
filter(effect %in% c("Y","N"))%>%
mutate(size.category = case_when(
size.category == 1 ~ "1nm < 100nm",
size.category == 2 ~ "100nm < 1µm",
size.category == 3 ~ "1µm < 100µm",
size.category == 4 ~ "100µm < 1mm",
size.category == 0 ~ "Not Reported"))%>%
rename(Type = "size.category")%>%
mutate_if(is.numeric, round,0)%>%
mutate(plot="Size")
study_s<-xtabs(~size.category +effect ,aoc)
sizefinal<- data.frame(cbind(sizef, study_s))%>%
rename(Endpoints='Freq.1')%>%
rename(category='size.category')
sizefinal
shapedf<-rowPerc(xtabs(~shape + effect, aoc))
shapef<-as.data.frame(shapedf)%>%
filter(effect %in% c("Y","N"))%>%
rename(Type="shape")%>%
mutate_if(is.numeric, round,0)%>%
mutate(plot="Shape")%>%
mutate(Type = case_when(
Type == "fragment" ~ "Fragment",
Type == "sphere" ~ "Sphere",
Type == "NA" ~ "Not Reported"))
study_sh<-xtabs(~shape + effect,aoc)
shapefinal<- data.frame(cbind(shapef, study_sh))%>%
rename(Endpoints='Freq.1')%>%
rename(category='shape')
shapefinal
lvl1df<-rowPerc(xtabs(~lvl1 +effect, aoc))
lvl1f<-as.data.frame(lvl1df)%>%
filter(effect %in% c("Y","N"))%>%
rename(Type= "lvl1")%>%
mutate_if(is.numeric, round,0)%>%
mutate(plot="Lvl1")%>%
mutate(Type = case_when(
Type == "alimentary.excretory" ~ "Alimentary, Excretory",
Type == "behavior.sense.neuro" ~ "Behavioral, Sensory, Neurological",
Type == "cell.growth.proliferation" ~ "Cell Growth and Proliferation",
Type == "cell.morphology.structure" ~ "Cell Morphology and Structure",
Type == "circulatory" ~ "Circulatory",
Type == "cytotoxicity" ~ "Cytotoxicity",
Type == "endocrine.signaling" ~ "Endocrine Signaling",
Type == "fitness" ~ "Fitness",
Type == "immune" ~ "Immune",
Type == "metabolism" ~ "Metabolism",
Type == "microbiome" ~ "Microbiome",
Type == "respiratory" ~ "Respiratory",
Type == "stress" ~ "Stress"))
study_l<-xtabs(~lvl1 +effect,aoc)
lvl1final<- data.frame(cbind(lvl1f, study_l))%>%
rename(Endpoints='Freq.1')%>%
rename(category='lvl1')
lvl1final
lifedf<-rowPerc(xtabs(~life.stage +effect, aoc))
lifef<-as.data.frame(lifedf)%>%
filter(effect %in% c("Y","N"))%>%
rename(Type= "life.stage")%>%
mutate_if(is.numeric, round,0)%>%
mutate(plot="Life.stage")%>%
mutate(Type = case_when(
Type == "early,f1"~"Early, F1 Generation",
Type == "early,f2"~"Early, F2 Generation",
Type == "juvenile"~"Juvenile",
Type == "adult"~"Adult",
Type == "Not Reported"~"Not Reported"))
studyli<-xtabs(~life.stage +effect ,aoc)
lifefinal<- data.frame(cbind(lifef, studyli))%>%
rename(Endpoints='Freq.1')%>%
rename(category='life.stage')
studyli
lifefinal
lifedf
vivodf<-rowPerc(xtabs(~invitro.invivo +effect, aoc))
vivof<-as.data.frame(vivodf)%>%
filter(effect %in% c("Y","N"))%>%
rename(Type= "invitro.invivo")%>%
mutate_if(is.numeric, round,0)%>%
mutate(plot="Invivo.invivo")%>%
mutate(Type = case_when(
Type=="invivo"~"In Vivo",
Type=="invitro"~"In Vitro"))
study_v<-xtabs(~invitro.invivo +effect,aoc)
vivofinal<- data.frame(cbind(vivof, study_v))%>%
rename(Endpoints='Freq.1')%>%
rename(category='invitro.invivo')
vivofinal
routedf<-rowPerc(xtabs(~exposure.route +effect, aoc))
routef<-as.data.frame(routedf)%>%
filter(effect %in% c("Y","N"))%>%
rename(Type= "exposure.route")%>%
mutate_if(is.numeric, round,0)%>%
mutate(plot="Exposure.route")%>%
mutate(Type = case_when(
Type == "dermal" ~ "Dermal",
Type == "food" ~ "Food",
Type == "gavage" ~ "Gavage",
Type == "gestation" ~ "Gestation",
Type == "gestation,lactation" ~ "Gestation & Lactation",
Type == "inhalation" ~ "Inhalation",
Type == "intratracheal.instillation" ~ "Intratracheal Instillation",
Type == "iv.injection" ~ "IV Injection",
Type ==  "Not Applicable"~"Not Applicable"))
study_r<-xtabs(~exposure.route +effect,aoc)
routefinal<- data.frame(cbind(routef, study_r))%>%
rename(Endpoints='Freq.1')%>%
rename(category='exposure.route')
lifefinal
routefinal
polyfinal
sizefinal
A<-rbind(polyfinal,sizefinal)
B<-rbind(A,shapefinal)
C<-rbind(B,lvl1final)
D<-rbind(C,lifefinal)
G<-rbind(D,vivofinal)
Final_effect_dataset<-rbind(G,routefinal)
Final_effect_datasetH<-Final_effect_dataset%>%
mutate(plot_f=factor(plot))
write.csv(Final_effect_datasetH, "Final_effect_datasetH.csv")
Final_effect_dataset <- read_csv("Final_effect_datasetH.csv")%>%
mutate(plot_f = case_when(
plot_f == "Polymer" ~ "Polymer",
plot_f == "Size" ~ "Size",
plot_f == "Shape" ~ "Shape",
plot_f == "Lvl1" ~ "Endpoint Category",
plot_f == "Life.stage" ~ "Life Stage",
plot_f == "Invivo.invivo" ~ "In Vivo or In Vitro",
plot_f == "Exposure.route" ~ "Exposure Route"))%>%
mutate(plot_f = factor(plot_f))%>%
mutate(logEndpoints = log(Endpoints))%>%
rename(Percent = Freq)
runApp('app_humans.R')
runApp('app_humansonly.R')
runApp('app_humansonly.R')
library(readr)
Final_effect_datasetH <- read_csv("Final_effect_datasetH.csv")
View(Final_effect_datasetH)
runApp('app_humansonly.R')
runApp('app_humansonly.R')
runApp('app_humansonly.R')
library(shiny); runApp('app_humansonly.R')
